{
	"name": "FuzzyJoinDataFlow",
	"properties": {
		"description": "This is used to apply the join condition like in SQL",
		"folder": {
			"name": "DataFlowFolder"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "RightFuzzyJoin",
						"type": "DatasetReference"
					},
					"name": "RightJoinDataExtracter"
				},
				{
					"dataset": {
						"referenceName": "LeftFuzzyJoin",
						"type": "DatasetReference"
					},
					"name": "LeftJoinDataExtracter"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FuzzyJoinFinalResult",
						"type": "DatasetReference"
					},
					"name": "FuzzyJoinSink"
				}
			],
			"transformations": [
				{
					"name": "LeftJoinFuzzyCasting"
				},
				{
					"name": "FuzzyJoinExtracter"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as short,",
				"          Name as string,",
				"          Postion as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> RightJoinDataExtracter",
				"source(output(",
				"          ID as string,",
				"          Name as string,",
				"          Postion as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LeftJoinDataExtracter",
				"LeftJoinDataExtracter cast(output(",
				"          ID as short",
				"     ),",
				"     errors: true) ~> LeftJoinFuzzyCasting",
				"RightJoinDataExtracter, LeftJoinFuzzyCasting join(fuzzyCompare(RightJoinDataExtracter@Postion, LeftJoinDataExtracter@Postion, 82.00),",
				"     joinType:'inner',",
				"     matchType:'fuzzy',",
				"     ignoreSpaces: false,",
				"     scoreColumn:'Percentage of Matching',",
				"     broadcast: 'off')~> FuzzyJoinExtracter",
				"FuzzyJoinExtracter sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['FuzzyJoinFinal.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          ID = RightJoinDataExtracter@ID,",
				"          Name = RightJoinDataExtracter@Name,",
				"          Postion = RightJoinDataExtracter@Postion,",
				"          Postion = LeftJoinDataExtracter@Postion,",
				"          {Percentage of Matching}",
				"     ),",
				"     partitionBy('hash', 1)) ~> FuzzyJoinSink"
			]
		}
	}
}